import 'package:flutter/material.dart';
import 'tts_controller.dart';

Future<void> showTtsSettings(BuildContext context) async {
  final ctrl = TtsController.instance;

  // Local, editable copies for the sheet UI
  TtsVoicePreset localPreset = ctrl.preset;
  double localPitch = ctrl.pitch;
  double localRate  = ctrl.rate;

  await showModalBottomSheet(
    context: context,
    isScrollControlled: true,
    builder: (context) {
      return StatefulBuilder(
        builder: (context, setState) {
          return SafeArea(
            child: Padding(
              padding: const EdgeInsets.all(16),
              child: Column(
                mainAxisSize: MainAxisSize.min,
                crossAxisAlignment: CrossAxisAlignment.stretch,
                children: [
                  Text('Voice preset', style: Theme.of(context).textTheme.titleMedium),
                  const SizedBox(height: 8),
                  DropdownButton<TtsVoicePreset>(
                    value: localPreset,
                    items: const [
                      DropdownMenuItem(
                        value: TtsVoicePreset.system,
                        child: Text('System default'),
                      ),
                      DropdownMenuItem(
                        value: TtsVoicePreset.australianMale,
                        child: Text('Male'),
                      ),
                      DropdownMenuItem(
                        value: TtsVoicePreset.australianFemale,
                        child: Text('Female'),
                      ),
                      DropdownMenuItem(
                        value: TtsVoicePreset.system,
                        child: Text('Child'),
                      ),
                    ],
                    onChanged: (v) => setState(() => localPreset = v ?? localPreset),
                  ),

                  const SizedBox(height: 16),
                  Text('Pitch: ${localPitch.toStringAsFixed(2)}'),
                  Slider(
                    value: localPitch,
                    min: 0.5,
                    max: 2.0,
                    onChanged: (v) async { await ctrl.setPitch(v); setState(() => localPitch = v); },
                  ),

                  const SizedBox(height: 8),
                  Text('Rate: ${localRate.toStringAsFixed(2)}'),
                  Slider(
                    value: localRate,
                    min: 0.1,
                    max: 1.0,
                    onChanged: (v) async { await ctrl.setRate(v); setState(() => localRate = v); },
                  ),

                  const SizedBox(height: 16),
                  ElevatedButton.icon(
                    icon: const Icon(Icons.save),
                    label: const Text('Save'),
                    onPressed: () async {
                      await ctrl.setRate(localRate);
                      await ctrl.setPitch(localPitch);
                      await ctrl.setPreset(localPreset);
                      if (context.mounted) Navigator.pop(context);
                    },
                  ),
                ],
              ),
            ),
          );
        },
      );
    },
  );
}



